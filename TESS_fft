import numpy as np
import matplotlib.pyplot as plt
import scipy.fftpack
from scipy.signal import find_peaks

def read_rv(filename):
    f = open(filename, 'r')
    rv_sum = [[]for i in range(953)] 
    rv_sum[0] = f.readline().strip().split()
    for i in np.arange(1,953):
        x = f.readline().strip().strip('[').strip(']').split()      
        while len(x) < 400:
            x.extend(f.readline().strip().strip('[').strip(']').split() )
            rv_sum[i] = x
    return rv_sum

def metadata(filename):
    for i in range(36):
        filename.readline()
        
def read_table(filename):
    f = open(filename, 'r')
    metadata(f)
    data = {}
    for elem in range(5391):
        line = f.readline().strip().split()
        if line[0] not in data:
            data[str(line[0])] = []
        data[str(line[0])].append(line[0:])
    return data

def fft(star_id, N, T): #star id, sample size, sample space
    rv_sum = read_rv("RV_values.txt")
    data = read_table("ajaaf477t2_mrt.txt")
    
    ID = str(star_id)
    detected_transit = []
    for i in range(0,len(data[ID])):
        if (data[ID][i][-1] == '1' and data[ID][i][-2] == '1'):
            detected_transit.append(data[ID][i][8]) 
    
    yf = scipy.fftpack.fft(rv_sum[star_id])
    xf = np.linspace(0.0, 1.0/(2.0*T), N/2)
    fig, ax = plt.subplots()
    ax.plot(xf, 2.0/N * np.abs(yf[:N//2]))
   # for xc in detected_transit:
    #    plt.axvline(x=xc, color='k', linestyle='--')
    plt.show()
    
    true_periods = []
    for i in range(0,len(data[ID])):
        true_periods.append(data[ID][i][8])
    print("True Periods: {}".format(true_periods)) 
    
    #pks = find_peaks(yf)
    #print(pks)
    
    x = 2.0/N * np.abs(yf[:N//2])
    y = np.argwhere(x == max(x))
    print(xf[y])

    x = 2.0/N * np.abs(yf[:N//2])[0:20]
    y = np.argwhere(x == max(x))
    print(xf[y])
