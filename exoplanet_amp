import numpy as np
import matplotlib.pyplot as plt

def read(filename):
    f = open(filename, 'r')
    rv = []
    for i in range(0,3896):
        rv.append(f.readline().strip().strip('\n'))
    for i in range(0, len(rv)): 
        rv[i] = float(rv[i]) 
    return np.array(rv)

def model(filename):    
    #extracting rv values
    rv_model = read(filename)
    time = np.linspace(0.0, len(rv_model)*0.25, len(rv_model))

    #chisquared b/w provided rv data and sin waves with dif amplitudes
    amp = np.arange(0,20,0.5)
    chi_squared = []
    for i in range(0, len(amp)):
        rv_element = amp[i] * np.sin((2*np.pi*time)/13.67)
        chi_squared_stat = sum(((rv_element - rv_model)**2)/50**2)
        chi_squared.append(chi_squared_stat)
       
    #plotting semiaplitude and chisquared
    plt.plot(amp, chi_squared)
    plt.title("Chisquared vs Semi-amplitude")
    plt.xlabel("Semi-amplitude")
    plt.ylabel("Chisquared")
    #plt.ylim(0,1000)
   
    #find the semiaplitude with min chisquared
    min_y = min(chi_squared)
    min_x = amp[chi_squared.index(min_y)]
  
    #find confidence interval
    CI_array = [min_y+1]*len(amp)
    plt.plot(amp, CI_array)
    idx = np.argwhere(np.diff(np.sign(np.array(chi_squared) - np.array(CI_array)))).flatten()
    plt.show()
    
    
    print("Minimum Amplitude: {}".format(min_x))
    print("Minimum Chisquared: {}".format(min_y))
    print("Confidence Interval: {}".format(amp[idx]))
    
    #actual data
    plt.scatter(time, rv_model, color = 'r', label = "True Data") 
    #best model - upper bound
    best_model2 = (amp[idx])[1] * np.sin((2*np.pi*time)/13.67)
    plt.plot(time, best_model2, label = "Upper Semiamplitude")
    #best model - lower bound
    best_model1 = (amp[idx])[0] * np.sin((2*np.pi*time)/13.67)
    plt.plot(time, best_model1, label = "Lower Semiamplitude")
    #best model - minimum semi-amp 
    best_model = min_x * np.sin((2*np.pi*time)/13.67)
    plt.plot(time, best_model, label = "Best Model")    
    plt.title("Model of Best Fit")
    plt.legend()
    plt.show()
